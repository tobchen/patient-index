/*
 * This file is generated by jOOQ.
 */
package de.tobchen.health.patientindex.feed.jooq.public_.tables.records;


import de.tobchen.health.patientindex.feed.jooq.public_.enums.MessageStatus;
import de.tobchen.health.patientindex.feed.jooq.public_.tables.Message;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record6<Integer, String, OffsetDateTime, String, OffsetDateTime, MessageStatus> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.message.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.message.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.message.patient_id</code>.
     */
    public void setPatientId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.message.patient_id</code>.
     */
    public String getPatientId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.message.patient_last_updated</code>.
     */
    public void setPatientLastUpdated(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.message.patient_last_updated</code>.
     */
    public OffsetDateTime getPatientLastUpdated() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.message.patient_merged_into_id</code>.
     */
    public void setPatientMergedIntoId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.message.patient_merged_into_id</code>.
     */
    public String getPatientMergedIntoId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.message.recorded_at</code>.
     */
    public void setRecordedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.message.recorded_at</code>.
     */
    public OffsetDateTime getRecordedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.message.status</code>.
     */
    public void setStatus(MessageStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.message.status</code>.
     */
    public MessageStatus getStatus() {
        return (MessageStatus) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, OffsetDateTime, String, OffsetDateTime, MessageStatus> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, OffsetDateTime, String, OffsetDateTime, MessageStatus> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return Message.MESSAGE.PATIENT_ID;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return Message.MESSAGE.PATIENT_LAST_UPDATED;
    }

    @Override
    public Field<String> field4() {
        return Message.MESSAGE.PATIENT_MERGED_INTO_ID;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Message.MESSAGE.RECORDED_AT;
    }

    @Override
    public Field<MessageStatus> field6() {
        return Message.MESSAGE.STATUS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPatientId();
    }

    @Override
    public OffsetDateTime component3() {
        return getPatientLastUpdated();
    }

    @Override
    public String component4() {
        return getPatientMergedIntoId();
    }

    @Override
    public OffsetDateTime component5() {
        return getRecordedAt();
    }

    @Override
    public MessageStatus component6() {
        return getStatus();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPatientId();
    }

    @Override
    public OffsetDateTime value3() {
        return getPatientLastUpdated();
    }

    @Override
    public String value4() {
        return getPatientMergedIntoId();
    }

    @Override
    public OffsetDateTime value5() {
        return getRecordedAt();
    }

    @Override
    public MessageStatus value6() {
        return getStatus();
    }

    @Override
    public MessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(String value) {
        setPatientId(value);
        return this;
    }

    @Override
    public MessageRecord value3(OffsetDateTime value) {
        setPatientLastUpdated(value);
        return this;
    }

    @Override
    public MessageRecord value4(String value) {
        setPatientMergedIntoId(value);
        return this;
    }

    @Override
    public MessageRecord value5(OffsetDateTime value) {
        setRecordedAt(value);
        return this;
    }

    @Override
    public MessageRecord value6(MessageStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public MessageRecord values(Integer value1, String value2, OffsetDateTime value3, String value4, OffsetDateTime value5, MessageStatus value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Integer id, String patientId, OffsetDateTime patientLastUpdated, String patientMergedIntoId, OffsetDateTime recordedAt, MessageStatus status) {
        super(Message.MESSAGE);

        setId(id);
        setPatientId(patientId);
        setPatientLastUpdated(patientLastUpdated);
        setPatientMergedIntoId(patientMergedIntoId);
        setRecordedAt(recordedAt);
        setStatus(status);
        resetChangedOnNotNull();
    }
}
